{"version":3,"sources":["functions/config.js","functions/http.js","components/leagues.js","functions/poe-ninja.js","contexts/utils.js","functions/utils.js","contexts/items.js","components/comparison.js","functions/compareItems.js","components/comparisons.js","components/app.js","index.js"],"names":["proxy","url","concat","fetchJSON","fetch","then","response","text","textResponse","ok","Error","status","JSON","parse","error","fetchLeagues","leagues","tempLeagues","filter","leagueHash","leagueName","id","some","prohibitedWord","toLowerCase","includes","tempSC","tempHC","length","Standard","Hardcore","Temp SC","Temp HC","mapToMetaLeagues","catch","console","typeConfig","config","_i","_Object$entries","Object","entries","currency","currencies","type","name_key","compare_key","fragments","item","prophecies","accessories","weapons","armours","divination_cards","base_types","maps","scarabs","jewels","flasks","_ref3","categoryItems","slicedToArray","assign","useEnsureProvider","context","ctx","React","useContext","displayName","SingleExecutionLockContext","createContext","SingleExecutionLockProvider","props","lock","useRef","react_default","a","createElement","Provider","value","isDefined","ItemsContext","ItemsProvider","_React$useState","useState","_React$useState2","items","setItems","useMemo","fetchItems","league","fetchPromises","map","_ref4","_ref5","category","_ref6","_ref7","details","itemsApi","log","itemsForLeague","lines","flat","Promise","all","useSelectedLeagueItems","selectedLeague","_useItems","_useItems2","fetchAllowed","key","executionLock","executionAllowed","current","useSingleExecutionLock","useEffect","fetchedItems","mergedItems","obj","stringify","err","deepClone","defineProperty","useFindItems","names","name","foundItem","_ref2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","return","find","Comparison","_ref","comparison","useCompareText","baseNames","compareNames","baseItems","compareItems","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","baseItem","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","compareItem","Math","round","comparePrice","useCostText","pieces","cost","style","order","base","compare","comment","ComparisonText","Comparisons","comparisonsByGroup","Pure vs. normal Breachstones","Divination cards vs. outcome","Fated uniques vs. their base + prophecy","Prophecy rewards","Gilded Scarabs","Item prices","Incursion uniques (vials excluded)","keys","group","i","comparison_Comparison","App","_useSelectedLeague","_useState","_useState2","setLeagues","fetchedLeagues","_useState3","_useState4","selectedMetaLeague","setSelectedMetaLeague","_useState5","_useState6","setSelectedLeague","metaLeagues","useSelectedLeague","onChange","event","target","utils_SingleExecutionLockProvider","items_ItemsProvider","comparisons_Comparisons","rootElement","document","getElementById","ReactDOM","render","app"],"mappings":"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","file":"static/js/main.f991131a.chunk.js","sourcesContent":["export const proxy = url => {\n  return `https://c-hive-proxy.herokuapp.com/${url}`;\n};\n\nexport const leaguesApi = () => {\n  return proxy(\"http://api.pathofexile.com/leagues?type=main&compact=1\");\n};\n\nexport const comparisons = () => {\n  return {\n    \"Pure vs. normal Breachstones\": [\n      {\n        name: \"Chayula\",\n        base: [\"Chayula's Pure Breachstone\"],\n        compare: [\"Chayula's Breachstone\"],\n      },\n      {\n        name: \"Uul-Netol\",\n        base: [\"Uul-Netol's Pure Breachstone\"],\n        compare: [\"Uul-Netol's Breachstone\"],\n      },\n      {\n        name: \"Tul\",\n        base: [\"Tul's Pure Breachstone\"],\n        compare: [\"Tul's Breachstone\"],\n      },\n      {\n        name: \"Xoph\",\n        base: [\"Xoph's Pure Breachstone\"],\n        compare: [\"Xoph's Breachstone\"],\n      },\n      {\n        name: \"Esh\",\n        base: [\"Esh's Pure Breachstone\"],\n        compare: [\"Esh's Breachstone\"],\n      },\n    ],\n    \"Divination cards vs. outcome\": [\n      {\n        name: \"The Hoarder (Exalted Orb)\",\n        base: [\"Exalted Orb\"],\n        compare: [\n          \"The Hoarder\",\n          \"The Hoarder\",\n          \"The Hoarder\",\n          \"The Hoarder\",\n          \"The Hoarder\",\n          \"The Hoarder\",\n          \"The Hoarder\",\n          \"The Hoarder\",\n          \"The Hoarder\",\n          \"The Hoarder\",\n          \"The Hoarder\",\n          \"The Hoarder\",\n        ],\n      },\n      {\n        name: \"Abandoned Wealth (3x Exalted Orb)\",\n        base: [\"Exalted Orb\", \"Exalted Orb\", \"Exalted Orb\"],\n        compare: [\n          \"Abandoned Wealth\",\n          \"Abandoned Wealth\",\n          \"Abandoned Wealth\",\n          \"Abandoned Wealth\",\n          \"Abandoned Wealth\",\n        ],\n      },\n      {\n        name: \"Nook's Crown (Elder Bone Helmet ilvl100)\",\n        base: [\"bone-helmet-86-elder\"],\n        compare: [\n          \"Nook's Crown\",\n          \"Nook's Crown\",\n          \"Nook's Crown\",\n          \"Nook's Crown\",\n        ],\n      },\n    ],\n    \"Fated uniques vs. their base + prophecy\": [\n      {\n        name: \"Amplification Rod\",\n        base: [\"Amplification Rod\"],\n        compare: [\"Reverberation Rod\", \"Power Magnified\"],\n        comment: \"The Lunaris Temple Level 2 (Act 3 or Act 8)\",\n      },\n      {\n        name: \"Atziri's Reflection\",\n        base: [\"Atziri's Reflection\"],\n        compare: [\"Atziri's Mirror\", \"The Queen's Sacrifice\"],\n        comment: \"The Alluring Abyss\",\n      },\n      {\n        name: \"Asenath's Chant\",\n        base: [\"Asenath's Chant\"],\n        compare: [\"Asenath's Mark\", \"Song of the Sekhema\"],\n        comment: \"The Quarry(Act 9)\",\n      },\n      {\n        name: \"Cameria's Avarice\",\n        base: [\"Cameria's Avarice\"],\n        compare: [\"Cameria's Maul\", \"Cold Greed\"],\n        comment: \"Waterways Map\",\n      },\n      {\n        name: \"Chaber Cairn\",\n        base: [\"Chaber Cairn\"],\n        compare: [\"Chober Chaber\", \"Faith Exhumed\"],\n        comment: \"Mausoleum Map\",\n      },\n      {\n        name: \"Corona Solaris\",\n        base: [\"Corona Solaris\"],\n        compare: [\"Eclipse Solaris\", \"Blinding Light\"],\n        comment: \"Temple Map\",\n      },\n      {\n        name: \"Cragfall\",\n        base: [\"Cragfall\"],\n        compare: [\"Craghead\", \"Heavy Blows\"],\n        comment: \"The Old Fields(Act 2)\",\n      },\n      {\n        name: \"Crystal Vault\",\n        base: [\"Crystal Vault\"],\n        compare: [\"Icetomb\", \"End of the Light\"],\n        comment: \"The Brine King's Reef(Act 6)\",\n      },\n      {\n        name: \"Death's Opus\",\n        base: [\"Death's Opus\"],\n        compare: [\"Death's Harp\", \"The Bowstring's Music\"],\n        comment: \"The Dried Lake(Act 4)\",\n      },\n      {\n        name: \"Deidbellow\",\n        base: [\"Deidbellow\"],\n        compare: [\"Deidbell\", \"Dying Cry\"],\n        comment: \"The Ebony Barracks(Act 3)\",\n      },\n      {\n        name: \"Doedre's Malevolence\",\n        base: [\"Doedre's Malevolence\"],\n        compare: [\"Doedre's Tenure\", \"The Malevolent Witch\"],\n        comment: \"Phantasmagoria Map\",\n      },\n      {\n        name: \"Doomfletch's Prism\",\n        base: [\"Doomfletch's Prism\"],\n        compare: [\"Doomfletch\", \"Ancient Doom\"],\n        comment: \"The Ancient Pyramid(Act 2)\",\n      },\n      {\n        name: \"Dreadbeak\",\n        base: [\"Dreadbeak\"],\n        compare: [\"Redbeak\", \"The Dreaded Rhoa\"],\n        comment: \"Bog Map\",\n      },\n\n      {\n        name: \"Dreadsurge\",\n        base: [\"Dreadsurge\"],\n        compare: [\"Dreadarc\", \"Burning Dread\"],\n        comment: \"Shrine Map\",\n      },\n      {\n        name: \"Duskblight\",\n        base: [\"Duskblight\"],\n        compare: [\"Dusktoe\", \"Agony at Dusk\"],\n        comment: \"The Harvest(Act 4)\",\n      },\n      {\n        name: \"Ezomyte Hold\",\n        base: [\"Ezomyte Hold\"],\n        compare: [\"Ezomyte Peak\", \"The Bloody Flowers Redux\"],\n        comment: \"The Grain Gate(Act 8)\",\n      },\n      {\n        name: \"Fox's Fortune\",\n        base: [\"Fox's Fortune\"],\n        compare: [\"Foxshade\", \"Dark Instincts\"],\n        comment: \"The Temple of Decay Level 2 (Act 7)\",\n      },\n      {\n        name: \"Frostferno\",\n        base: [\"Frostferno\"],\n        compare: [\"Heatshiver\", \"A Vision of Ice and Fire\"],\n        comment: \"Estuary Map\",\n      },\n      {\n        name: \"Geofri's Devotion\",\n        base: [\"Geofri's Devotion\"],\n        compare: [\"Geofri's Baptism\", \"Black Devotion\"],\n        comment: \"Relic Chambers Map \",\n      },\n      {\n        name: \"Geofri's Legacy\",\n        base: [\"Geofri's Legacy\"],\n        compare: [\"Geofri's Crest\", \"The Bishop's Legacy\"],\n        comment: \"Cursed Crypt Map\",\n      },\n      {\n        name: \"Hrimburn\",\n        base: [\"Hrimburn\"],\n        compare: [\"Hrimsorrow\", \"Fire and Ice\"],\n        comment: \"The Tidal Island (Act 1 or Act 6)\",\n      },\n      {\n        name: \"Hrimnor's Dirge\",\n        base: [\"Hrimnor's Dirge\"],\n        compare: [\"Hrimnor's Hymn\", \"Winter's Mournful Melodies\"],\n        comment: \"The Fellshrine Ruins (Act 2)\",\n      },\n      {\n        name: \"Hyrri's Demise\",\n        base: [\"Hyrri's Demise\"],\n        compare: [\"Hyrri's Bite\", \"A Dishonourable Death\"],\n        comment: \"The Mud Flats (Act 6)\",\n      },\n      {\n        name: \"Kaltensoul\",\n        base: [\"Kaltensoul\"],\n        compare: [\"Kaltenhalt\", \"The Snuffed Flame\"],\n        comment: \"The Lower Prison(Act 1 or Act 6)\",\n      },\n      {\n        name: \"Kaom's Way\",\n        base: [\"Kaom's Way\"],\n        compare: [\"Kaom's Sign\", \"The King's Path\"],\n        comment: \"Kaom's Stronghold(Act 4)\",\n      },\n      {\n        name: \"Karui Charge\",\n        base: [\"Karui Charge\"],\n        compare: [\"Karui Ward\", \"The Karui Rebellion\"],\n        comment: \"The Grain Gate(Act 8)\",\n      },\n      {\n        name: \"Malachai's Awakening\",\n        base: [\"Malachai's Awakening\"],\n        compare: [\"Malachai's Simula\", \"The Nightmare Awakens\"],\n        comment: \"Core Map\",\n      },\n      {\n        name: \"Martyr's Crown\",\n        base: [\"Martyr's Crown\"],\n        compare: [\"Crown of Thorns\", \"Pleasure and Pain\"],\n        comment: \"The Harvest(Act 4) or Core Map\",\n      },\n      {\n        name: \"Mirebough\",\n        base: [\"Mirebough\"],\n        compare: [\"Fencoil\", \"Trapped in the Tower\"],\n        comment: \"The Sceptre of God(Act 3)\",\n      },\n      {\n        name: \"Ngamahu Tiki\",\n        base: [\"Ngamahu Tiki\"],\n        compare: [\"Araku Tiki\", \"A Forest of False Idols\"],\n        comment: \"Kaom's Dream(Act 4)\",\n      },\n      {\n        name: \"Panquetzaliztli\",\n        base: [\"Panquetzaliztli\"],\n        compare: [\"Quecholli\", \"The Fall of an Empire\"],\n        comment: \"Maze Map\",\n      },\n      {\n        name: \"Queen's Escape\",\n        base: [\"Queen's Escape\"],\n        compare: [\"Queen's Decree\", \"The Misunderstood Queen\"],\n        comment: \"The Belly of the Beast Level 1(Act 4)\",\n      },\n      {\n        name: \"Realm Ender\",\n        base: [\"Realm Ender\"],\n        compare: [\"Realmshaper\", \"The Beginning and the End\"],\n        comment: \"The Crypt Level 2(Act 2)\",\n      },\n      {\n        name: \"Sanguine Gambol\",\n        base: [\"Sanguine Gambol\"],\n        compare: [\"Goredrill\", \"Crimson Hues\"],\n        comment: \"Overgrown Ruin Map\",\n      },\n      {\n        name: \"Shavronne's Gambit\",\n        base: [\"Shavronne's Gambit\"],\n        compare: [\"Shavronne's Pace\", \"The Flow of Energy\"],\n        comment: \"The Harvest(Act 4)\",\n      },\n      {\n        name: \"Silverbough\",\n        base: [\"Silverbough\"],\n        compare: [\"Silverbranch\", \"The Silverwood\"],\n        comment: \"The Riverways (Act 2)\",\n      },\n      {\n        name: \"Sunspite\",\n        base: [\"Sunspite\"],\n        compare: [\"Sundance\", \"Sun's Punishment\"],\n        comment: \"The Solaris Temple Level 2 (Act 8)\",\n      },\n      {\n        name: \"The Cauteriser\",\n        base: [\"The Cauteriser\"],\n        compare: [\"Limbsplit\", \"Severed Limbs\"],\n        comment: \"The Mines Level 2(Act 4)\",\n      },\n      {\n        name: \"The Dancing Duo\",\n        base: [\"The Dancing Duo\"],\n        compare: [\"The Dancing Dervish\", \"Dance of Steel\"],\n        comment: \"Arsenal Map\",\n      },\n      {\n        name: \"The Effigon\",\n        base: [\"The Effigon\"],\n        compare: [\"The Ignomon\", \"Blind Faith\"],\n        comment: \"Haunted Mansion Map\",\n      },\n      {\n        name: \"The Gryphon\",\n        base: [\"The Gryphon\"],\n        compare: [\"The Screaming Eagle\", \"The Apex Predator\"],\n        comment: \"The Aqueduct(Act 4)\",\n      },\n      {\n        name: \"The Nomad\",\n        base: [\"The Nomad\"],\n        compare: [\"The Magnate\", \"The Great Leader of the North\"],\n        comment: \"The Foothills(Act 9)\",\n      },\n      {\n        name: \"The Oak\",\n        base: [\"The Oak\"],\n        compare: [\"Springleaf\", \"Nature's Resilience\"],\n        comment: \"The Southern Forest (Act 2)\",\n      },\n      {\n        name: \"The Signal Fire\",\n        base: [\"The Signal Fire\"],\n        compare: [\"Blackgleam\", \"Fire and Brimstone\"],\n        comment: \"The Crematorium(Act 3)\",\n      },\n      {\n        name: \"The Stormwall\",\n        base: [\"The Stormwall\"],\n        compare: [\"The Stormheart\", \"The Storm Spire\"],\n        comment: \"Plateau Map\",\n      },\n      {\n        name: \"The Tempest\",\n        base: [\"The Tempest\"],\n        compare: [\"Storm Cloud\", \"The Servant's Heart\"],\n        comment: \"The Chamber of Sins Level 2 (Act 2)\",\n      },\n      {\n        name: \"Thirst for Horrors\",\n        base: [\"Thirst for Horrors\"],\n        compare: [\"Chalice of Horrors\", \"Mouth of Horrors\"],\n        comment: \"The Harvest (Act 4) or The Toxic Conduits (Act 8) \",\n      },\n      {\n        name: \"Timetwist\",\n        base: [\"Timetwist\"],\n        compare: [\"Timeclasp\", \"A Rift in Time\"],\n        comment: \"Laboratory Map \",\n      },\n      {\n        name: \"Voidheart\",\n        base: [\"Voidheart\"],\n        compare: [\"Blackheart\", \"From The Void\"],\n        comment: \"\",\n      },\n      {\n        name: \"Wall of Brambles\",\n        base: [\"Wall of Brambles\"],\n        compare: [\"Bramblejack\", \"The King and the Brambles\"],\n        comment: \"The Grand Arena(Act 4)\",\n      },\n      {\n        name: \"Whakatutuki o Matua\",\n        base: [\"Whakatutuki o Matua\"],\n        compare: [\"Matua Tupuna\", \"The Mentor\"],\n        comment: \"Basilica Map\",\n      },\n      {\n        name: \"Wildwrap\",\n        base: [\"Wildwrap\"],\n        compare: [\"Briskwrap\", \"Last of the Wildmen\"],\n        comment: \"Strand Map\",\n      },\n      {\n        name: \"Windshriek\",\n        base: [\"Windshriek\"],\n        compare: [\"Windscream\", \"Darktongue's Shriek\"],\n        comment: \"Sepulchre Map\",\n      },\n      {\n        name: \"Winterweave\",\n        base: [\"Winterweave\"],\n        compare: [\"Bloodboil\", \"Cold Blooded Fury\"],\n        comment: \"Beach Map\",\n      },\n    ],\n    \"Prophecy rewards\": [\n      {\n        name: \"Volkuur's Key\",\n        base: [\"Volkuur's Key\"],\n        compare: [\"The Unbreathing Queen V\", \"Cemetery Map\"],\n        comment: \"Cemetery Map\",\n      },\n    ],\n    \"Gilded Scarabs\": [\n      {\n        name: \"Sulphite\",\n        base: [\"Gilded Sulphite Scarab\"],\n        compare: [],\n        comment: \"Cameria\",\n      },\n      {\n        name: \"Legion\",\n        base: [\"Gilded Legion Scarab\"],\n        compare: [],\n        comment: \"Vagan\",\n      },\n      {\n        name: \"Harbinger\",\n        base: [\"Gilded Harbinger Scarab\"],\n        compare: [],\n        comment: \"Tora\",\n      },\n      {\n        name: \"Bestiary\",\n        base: [\"Gilded Bestiary Scarab\"],\n        compare: [],\n        comment: \"Jorgin\",\n      },\n      {\n        name: \"Divination\",\n        base: [\"Gilded Divination Scarab\"],\n        compare: [],\n        comment: \"Gravicius\",\n      },\n      {\n        name: \"Cartography\",\n        base: [\"Gilded Cartography Scarab\"],\n        compare: [],\n        comment: \"Rin\",\n      },\n      {\n        name: \"Torment\",\n        base: [\"Gilded Torment Scarab\"],\n        compare: [],\n        comment: \"Leo\",\n      },\n      {\n        name: \"Shaper\",\n        base: [\"Gilded Shaper Scarab\"],\n        compare: [],\n        comment: \"Vorici\",\n      },\n      {\n        name: \"Elder\",\n        base: [\"Gilded Elder Scarab\"],\n        compare: [],\n        comment: \"Korell\",\n      },\n      {\n        name: \"Reliquary\",\n        base: [\"Gilded Reliquary Scarab\"],\n        compare: [],\n        comment: \"Elreon\",\n      },\n      {\n        name: \"Breach\",\n        base: [\"Gilded Breach Scarab\"],\n        compare: [],\n        comment: \"It That Fled\",\n      },\n      {\n        name: \"Ambush\",\n        base: [\"Gilded Ambush Scarab\"],\n        compare: [],\n        comment: \"Haku\",\n      },\n      {\n        name: \"Perandus\",\n        base: [\"Gilded Perandus Scarab\"],\n        compare: [],\n        comment: \"Janus\",\n      },\n    ],\n    \"Item prices\": [\n      {\n        name: \"Exalted Orb\",\n        base: [\"Exalted Orb\"],\n        compare: [],\n      },\n    ],\n    \"Incursion uniques (vials excluded)\": [\n      {\n        name: \"Apep's Supremacy\",\n        base: [\"Apep's Supremacy\"],\n        compare: [\"Apep's Slumber\"],\n        comment:\n          \"Vial of Awakening: https://www.pathofexile.com/trade/search/Metamorph/KYVR6Ri5\",\n      },\n      {\n        name: \"Slavedriver's Hand\",\n        base: [\"Slavedriver's Hand\"],\n        compare: [\"Architect's Hand\"],\n        comment:\n          \"Vial of Dominance: https://www.pathofexile.com/trade/search/Metamorph/q2Ew93Cg\",\n      },\n      {\n        name: \"Mask of the Stitched Demon\",\n        base: [\"Mask of the Stitched Demon\"],\n        compare: [\"Mask of the Spirit Drinker\"],\n        comment:\n          \"Vial of Summoning: https://www.pathofexile.com/trade/search/Metamorph/mZprJJH6\",\n      },\n      {\n        name: \"Coward's Legacy\",\n        base: [\"Coward's Legacy\"],\n        compare: [\"Coward's Chains\"],\n        comment:\n          \"Vial of Consequence: https://www.pathofexile.com/trade/search/Metamorph/REManrf7\",\n      },\n      {\n        name: \"Fate of the Vaal\",\n        base: [\"Fate of the Vaal\"],\n        compare: [\"Story of the Vaal\"],\n        comment:\n          \"Vial of Fate: https://www.pathofexile.com/trade/search/Metamorph/ak4Q2pte\",\n      },\n      {\n        name: \"Omeyocan\",\n        base: [\"Omeyocan\"],\n        compare: [\"Dance of the Offered\"],\n        comment:\n          \"Vial of the Ritual: https://www.pathofexile.com/trade/search/Metamorph/9d9Wk4uK\",\n      },\n      {\n        name: \"Zerphi's Heart\",\n        base: [\"Zerphi's Heart\"],\n        compare: [\"Sacrificial Heart\"],\n        comment:\n          \"Vial of Sacrifice: https://www.pathofexile.com/trade/search/Metamorph/pY25JWi0\",\n      },\n      {\n        name: \"Soul Ripper\",\n        base: [\"Soul Ripper\"],\n        compare: [\"Soul Catcher\"],\n        comment:\n          \"Vial of the Ghost: https://www.pathofexile.com/trade/search/Metamorph/rGdy0gHQ\",\n      },\n      {\n        name: \"Transcendent Flesh\",\n        base: [\"Transcendent Flesh\"],\n        compare: [\"Tempered Flesh\"],\n        comment:\n          \"Vial of Transcendence: https://www.pathofexile.com/trade/search/Metamorph/Q34bbRuw\",\n      },\n      {\n        name: \"Transcendent Mind\",\n        base: [\"Transcendent Mind\"],\n        compare: [\"Tempered Mind\"],\n        comment:\n          \"Vial of Transcendence: https://www.pathofexile.com/trade/search/Metamorph/Q34bbRuw\",\n      },\n      {\n        name: \"Transcendent Spirit\",\n        base: [\"Transcendent Spirit\"],\n        compare: [\"Tempered Spirit\"],\n        comment:\n          \"Vial of Transcendence: https://www.pathofexile.com/trade/search/Metamorph/Q34bbRuw\",\n      },\n    ],\n  };\n};\n","export const fetchJSON = url => {\n  return fetch(url).then(response => {\n    return response.text().then(textResponse => {\n      if (response.ok) {\n        try {\n          return JSON.parse(textResponse);\n        } catch (error) {\n          throw new Error(\n            `Could not JSON parse reponse: ${textResponse}. Error: ${error}`\n          );\n        }\n      } else {\n        throw new Error(`HTTP error: ${response.status} - ${textResponse}`);\n      }\n    });\n  });\n};\n","import { useState, useEffect } from \"react\";\n\nimport { leaguesApi } from \"../functions/config\";\nimport { fetchJSON } from \"../functions/http\";\n\nconst mapToMetaLeagues = leagues => {\n  const tempLeagues = leagues.filter(leagueHash => {\n    const leagueName = leagueHash.id;\n    return !(\n      [\"ssf\", \"standard\"].some(prohibitedWord =>\n        leagueName.toLowerCase().includes(prohibitedWord)\n      ) || leagueName.toLowerCase() === \"hardcore\"\n    );\n  });\n\n  const tempSC = tempLeagues.filter(leagueHash => {\n    return !leagueHash.id.toLowerCase().includes(\"hardcore\");\n  });\n\n  const tempHC = tempLeagues.filter(leagueHash => {\n    return leagueHash.id.toLowerCase().includes(\"hardcore\");\n  });\n\n  if (tempSC.length !== 1 || tempHC.length !== 1) {\n    return {\n      Standard: \"Standard\",\n      Hardcore: \"Hardcore\",\n    };\n  }\n\n  return {\n    \"Temp SC\": tempSC[0].id,\n    \"Temp HC\": tempHC[0].id,\n    Standard: \"Standard\",\n    Hardcore: \"Hardcore\",\n  };\n};\n\nconst fetchLeagues = () => {\n  return fetchJSON(leaguesApi())\n    .then(leagues => {\n      return mapToMetaLeagues(leagues);\n    })\n    .catch(error => {\n      console.error(`Couldn't fetch leagues: ${error}`);\n    });\n};\n\nexport const useSelectedLeague = () => {\n  const [leagues, setLeagues] = useState({});\n  useEffect(() => {\n    fetchLeagues().then(fetchedLeagues => {\n      console.log(`Leagues: ${JSON.stringify(fetchedLeagues)}`);\n      setLeagues(fetchedLeagues);\n    });\n  }, []);\n\n  const [selectedMetaLeague, setSelectedMetaLeague] = useState(\"Temp SC\");\n\n  const [selectedLeague, setSelectedLeague] = useState();\n  useEffect(() => {\n    setSelectedLeague(leagues[selectedMetaLeague]);\n  }, [leagues, selectedMetaLeague]);\n\n  const metaLeagues = [\"Temp SC\", \"Temp HC\", \"Standard\", \"Hardcore\"];\n\n  return {\n    metaLeagues,\n    selectedMetaLeague,\n    selectedLeague,\n    setSelectedMetaLeague,\n  };\n};\n","import { proxy } from \"./config\";\n\nexport const itemsApi = (category, type, league) => {\n  return proxy(\n    `https://poe.ninja/api/data/${category}overview?league=${league}&type=${type}`\n  );\n};\n\nexport const typeConfigByCategory = () => {\n  return {\n    currency: {\n      currencies: {\n        type: \"Currency\",\n        name_key: \"currencyTypeName\",\n        compare_key: \"chaosEquivalent\",\n      },\n      fragments: {\n        type: \"Fragment\",\n        name_key: \"currencyTypeName\",\n        compare_key: \"chaosEquivalent\",\n      },\n    },\n    item: {\n      prophecies: {\n        type: \"Prophecy\",\n        name_key: \"name\",\n        compare_key: \"chaosValue\",\n      },\n      accessories: {\n        type: \"UniqueAccessory\",\n        name_key: \"name\",\n        compare_key: \"chaosValue\",\n      },\n      weapons: {\n        type: \"UniqueWeapon\",\n        name_key: \"name\",\n        compare_key: \"chaosValue\",\n      },\n      armours: {\n        type: \"UniqueArmour\",\n        name_key: \"name\",\n        compare_key: \"chaosValue\",\n      },\n      divination_cards: {\n        type: \"DivinationCard\",\n        name_key: \"name\",\n        compare_key: \"chaosValue\",\n      },\n      base_types: {\n        type: \"BaseType\",\n        name_key: \"detailsId\",\n        compare_key: \"chaosValue\",\n      },\n      maps: {\n        type: \"Map\",\n        name_key: \"name\",\n        compare_key: \"chaosValue\",\n      },\n      scarabs: {\n        type: \"Scarab\",\n        name_key: \"name\",\n        compare_key: \"chaosValue\",\n      },\n      jewels: {\n        type: \"UniqueJewel\",\n        name_key: \"name\",\n        compare_key: \"chaosValue\",\n      },\n      flasks: {\n        type: \"UniqueFlask\",\n        name_key: \"name\",\n        compare_key: \"chaosValue\",\n      },\n    },\n  };\n};\n\nexport const typeConfig = () => {\n  let config = {};\n\n  for (const [, categoryItems] of Object.entries(typeConfigByCategory())) {\n    config = Object.assign(config, categoryItems);\n  }\n\n  return config;\n};\n","import React from \"react\";\n\nexport const useEnsureProvider = context => {\n  const ctx = React.useContext(context);\n\n  if (!ctx) {\n    throw new Error(\n      `${context.displayName} cannot be used outside the provider.`\n    );\n  }\n\n  return ctx;\n};\n\nconst SingleExecutionLockContext = React.createContext();\nexport const SingleExecutionLockProvider = props => {\n  const lock = React.useRef({});\n\n  return <SingleExecutionLockContext.Provider value={lock} {...props} />;\n};\n\nexport const useSingleExecutionLock = key => {\n  const executionLock = useEnsureProvider(SingleExecutionLockContext);\n\n  let executionAllowed = false;\n\n  if (!executionLock.current[key]) {\n    executionLock.current[key] = true;\n    executionAllowed = true;\n  }\n\n  return executionAllowed;\n};\n","export const deepClone = obj => {\n  try {\n    return JSON.parse(JSON.stringify(obj));\n  } catch (err) {\n    console.error(`Object deep clone error: ${err}`);\n\n    return {};\n  }\n};\n\nexport const isDefined = value =>\n  typeof value !== \"undefined\" && value !== null;\n","import React from \"react\";\nimport { fetchJSON } from \"../functions/http\";\nimport {\n  itemsApi,\n  typeConfigByCategory,\n  typeConfig,\n} from \"../functions/poe-ninja\";\nimport { useEnsureProvider, useSingleExecutionLock } from \"./utils\";\nimport { deepClone } from \"../functions/utils\";\n\nconst ItemsContext = React.createContext();\n\nexport const useItems = () => {\n  return useEnsureProvider(ItemsContext);\n};\n\nexport const ItemsProvider = props => {\n  const [items, setItems] = React.useState({});\n\n  const value = React.useMemo(() => [items, setItems], [items]);\n\n  return <ItemsContext.Provider value={value} {...props} />;\n};\n\nconst find = (items, name) => {\n  if (!items) return null;\n  let foundItem;\n  for (const [type, details] of Object.entries(typeConfig())) {\n    for (const item of items[type]) {\n      if (item[details.name_key] === name) {\n        foundItem = item;\n        foundItem.type = type;\n        break;\n      }\n    }\n    if (foundItem !== undefined) {\n      break;\n    }\n  }\n\n  return foundItem;\n};\n\nconst fetchItems = league => {\n  const items = {};\n\n  const fetchPromises = Object.entries(typeConfigByCategory())\n    .map(([category, categoryItems]) => {\n      return Object.entries(categoryItems).map(([type, details]) => {\n        const url = itemsApi(category, details.type, league);\n        console.log(`Fetching ${type} items for ${league} league from ${url}`);\n        return fetchJSON(url)\n          .then(itemsForLeague => {\n            console.log(\n              `Fetched: ${itemsForLeague.lines.length} ${type} items`\n            );\n            items[type] = itemsForLeague.lines;\n          })\n          .catch(error => {\n            console.error(`Couldn't fetch items: ${error}`);\n          });\n      });\n    })\n    .flat();\n\n  return Promise.all(fetchPromises).then(() => {\n    return items;\n  });\n};\n\nexport const useSelectedLeagueItems = selectedLeague => {\n  const [items, setItems] = useItems();\n  const fetchAllowed = useSingleExecutionLock(selectedLeague);\n\n  React.useEffect(() => {\n    if (!selectedLeague) return;\n\n    if (!items[selectedLeague] && fetchAllowed) {\n      console.log(`${selectedLeague} league selected, fetching items...`);\n      fetchItems(selectedLeague).then(fetchedItems => {\n        const mergedItems = Object.assign(deepClone(items), {\n          [selectedLeague]: fetchedItems,\n        });\n        setItems(mergedItems);\n      });\n    }\n  }, [fetchAllowed, items, selectedLeague, setItems]);\n\n  return items[selectedLeague];\n};\n\nexport const useFindItems = (league, names) => {\n  const items = useSelectedLeagueItems(league);\n  return names.map(name => {\n    return find(items, name);\n  });\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { comparePrice, cost } from \"../functions/compareItems\";\nimport { useFindItems } from \"../contexts/items\";\nimport { isDefined } from \"../functions/utils\";\n\nexport const Comparison = ({ selectedLeague, comparison }) => {\n  const useCompareText = (baseNames, compareNames) => {\n    const baseItems = useFindItems(selectedLeague, baseNames);\n    const compareItems = useFindItems(selectedLeague, compareNames);\n    let text;\n\n    if (baseItems.concat(compareItems).some(item => !isDefined(item))) {\n      text = \"N/A\";\n    } else {\n      text = comparePrice(baseItems, compareItems);\n    }\n\n    return text;\n  };\n\n  const useCostText = names => {\n    const pieces = names.length;\n    const items = useFindItems(selectedLeague, names);\n\n    let text;\n    if (pieces === 0) {\n      text = \"\";\n    } else if (items.some(item => !isDefined(item))) {\n      text = \"N/A\";\n    } else {\n      text = `, cost: ${cost(items)} chaos, pieces: ${pieces}`;\n    }\n\n    return text;\n  };\n\n  const ComparisonText = () => {\n    let text = `${comparison.name}: `;\n\n    text += `${useCompareText(\n      comparison.base,\n      comparison.compare\n    )} chaos profit`;\n\n    text += useCostText(comparison.compare);\n\n    if (comparison.comment) {\n      text += ` (${comparison.comment})`;\n    }\n\n    return text;\n  };\n\n  let style = {\n    order: useCompareText(\n      comparison.base,\n      comparison.compare\n    )\n  };\n\n  return <li key={comparison.key} style={style}>{ComparisonText()}</li>;\n};\n\nComparison.propTypes = {\n  comparison: PropTypes.object,\n  selectedLeague: PropTypes.string,\n  key: PropTypes.number,\n};\n","import { typeConfig } from \"./poe-ninja\";\n\nexport const cost = items => {\n  let value = 0;\n\n  for (const item of items) {\n    const compareKey = typeConfig()[item.type].compare_key;\n    value += item[compareKey];\n  }\n\n  return Math.round(value);\n};\n\nexport const comparePrice = (baseItems, compareItems) => {\n  let value = 0;\n\n  for (const baseItem of baseItems) {\n    const baseItemCompareKey = typeConfig()[baseItem.type].compare_key;\n    value += baseItem[baseItemCompareKey];\n  }\n\n  for (const compareItem of compareItems) {\n    const compareItemCompareKey = typeConfig()[compareItem.type].compare_key;\n    value -= compareItem[compareItemCompareKey];\n  }\n\n  return Math.round(value);\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { comparisons } from \"../functions/config\";\nimport { Comparison } from \"./comparison\";\n\nexport const Comparisons = ({ selectedLeague }) => {\n  const comparisonsByGroup = comparisons();\n\n  return (\n    <div>\n      {Object.keys(comparisonsByGroup).map(group => (\n        <div key={group}>\n          <h2>{group}</h2>\n          <ul>\n          {comparisonsByGroup[group].map((comparison, i) => (\n            <Comparison\n              selectedLeague={selectedLeague}\n              comparison={comparison}\n              key={i}\n            />\n          ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nComparisons.propTypes = {\n  selectedLeague: PropTypes.string,\n};\n","import React from \"react\";\nimport { useSelectedLeague } from \"./leagues\";\nimport { ItemsProvider } from \"../contexts/items\";\nimport { SingleExecutionLockProvider } from \"../contexts/utils\";\nimport { Comparisons } from \"./comparisons\";\n\nconst App = () => {\n  const {\n    metaLeagues,\n    selectedMetaLeague,\n    selectedLeague,\n    setSelectedMetaLeague,\n  } = useSelectedLeague();\n\n  return (\n    <div>\n      <h1>PoE - What to flip?</h1>\n      <select\n        name=\"league\"\n        value={selectedMetaLeague}\n        onChange={event => setSelectedMetaLeague(event.target.value)}\n      >\n        {metaLeagues.map(league => (\n          <option key={league} value={league}>\n            {league}\n          </option>\n        ))}\n      </select>\n\n      <SingleExecutionLockProvider>\n        <ItemsProvider>\n          <Comparisons selectedLeague={selectedLeague}></Comparisons>\n        </ItemsProvider>\n      </SingleExecutionLockProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}